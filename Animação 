<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Limio Blockchain Animation</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #0a0a0a, #1a1a2e, #16213e);
            font-family: 'Courier New', monospace;
            color: #00ff88;
            overflow-x: auto;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 30px;
            background: rgba(0, 255, 136, 0.05);
            border-radius: 20px;
            border: 1px solid rgba(0, 255, 136, 0.2);
        }

        .limio-logo {
            font-size: 3em;
            font-weight: bold;
            background: linear-gradient(45deg, #00ff88, #00d4ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
            text-shadow: 0 0 30px rgba(0, 255, 136, 0.3);
        }

        .subtitle {
            font-size: 1.1em;
            color: #8892b0;
            margin-bottom: 20px;
        }

        .network-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: rgba(0, 0, 0, 0.4);
            border: 1px solid rgba(0, 255, 136, 0.3);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            backdrop-filter: blur(10px);
        }

        .stat-value {
            font-size: 1.8em;
            color: #00ff88;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #8892b0;
            font-size: 0.9em;
        }

        .blockchain-container {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            padding: 40px 0;
            overflow-x: auto;
            min-height: 350px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 20px;
            margin: 30px 0;
        }

        .block {
            min-width: 220px;
            height: 180px;
            background: linear-gradient(145deg, rgba(0, 20, 40, 0.8), rgba(0, 40, 80, 0.6));
            border-radius: 15px;
            margin: 0 15px;
            padding: 20px;
            position: relative;
            border: 2px solid #00ff88;
            transition: all 0.4s ease;
            opacity: 0;
            transform: translateY(50px) rotateX(10deg);
            box-shadow: 
                0 10px 30px rgba(0, 0, 0, 0.5),
                0 0 20px rgba(0, 255, 136, 0.2);
        }

        .block.active {
            opacity: 1;
            transform: translateY(0) rotateX(0deg);
        }

        .block.mining {
            animation: limioMining 2s infinite;
            border-color: #00d4ff;
        }

        @keyframes limioMining {
            0%, 100% { 
                transform: translateY(0) scale(1);
                box-shadow: 
                    0 10px 30px rgba(0, 0, 0, 0.5),
                    0 0 30px rgba(0, 212, 255, 0.6);
            }
            50% { 
                transform: translateY(-10px) scale(1.03);
                box-shadow: 
                    0 20px 40px rgba(0, 0, 0, 0.7),
                    0 0 50px rgba(0, 212, 255, 0.8);
            }
        }

        .block-header {
            font-weight: bold;
            font-size: 1.1em;
            color: #00ff88;
            margin-bottom: 12px;
            text-align: center;
        }

        .block-data {
            font-size: 0.85em;
            line-height: 1.5;
            color: #8892b0;
        }

        .hash {
            font-family: 'Courier New', monospace;
            font-size: 0.75em;
            background: rgba(0, 255, 136, 0.1);
            padding: 6px;
            border-radius: 6px;
            margin: 6px 0;
            word-break: break-all;
            border-left: 3px solid #00ff88;
        }

        .limio-amount {
            color: #00d4ff;
            font-weight: bold;
        }

        .chain-link {
            width: 80px;
            height: 8px;
            background: linear-gradient(90deg, #00ff88, #00d4ff);
            position: relative;
            opacity: 0;
            transform: scaleX(0);
            transform-origin: left;
            border-radius: 4px;
        }

        .chain-link.active {
            opacity: 1;
            animation: limioLinkGrow 1s ease-out forwards;
        }

        @keyframes limioLinkGrow {
            0% { 
                transform: scaleX(0);
                filter: brightness(1);
            }
            50% {
                filter: brightness(1.5);
            }
            100% { 
                transform: scaleX(1);
                filter: brightness(1);
            }
        }

        .chain-link::before,
        .chain-link::after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            background: radial-gradient(circle, #00ff88, #00d4ff);
            border-radius: 50%;
            top: -4px;
            box-shadow: 0 0 10px rgba(0, 255, 136, 0.5);
        }

        .chain-link::before { left: -8px; }
        .chain-link::after { right: -8px; }

        .controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin: 30px 0;
            flex-wrap: wrap;
        }

        .limio-btn {
            background: linear-gradient(145deg, rgba(0, 255, 136, 0.2), rgba(0, 212, 255, 0.2));
            border: 2px solid #00ff88;
            padding: 12px 25px;
            border-radius: 8px;
            color: #00ff88;
            font-family: 'Courier New', monospace;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }

        .limio-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 255, 136, 0.3), transparent);
            transition: left 0.5s;
        }

        .limio-btn:hover {
            border-color: #00d4ff;
            color: #00d4ff;
            box-shadow: 0 0 20px rgba(0, 255, 136, 0.3);
        }

        .limio-btn:hover::before {
            left: 100%;
        }

        .limio-btn:disabled {
            border-color: #666;
            color: #666;
            cursor: not-allowed;
            box-shadow: none;
        }

        .limio-btn:disabled::before {
            display: none;
        }

        .cli-panel {
            background: rgba(0, 0, 0, 0.6);
            border: 1px solid #00ff88;
            border-radius: 12px;
            padding: 25px;
            margin: 30px 0;
            font-family: 'Courier New', monospace;
        }

        .cli-header {
            color: #00ff88;
            font-size: 1.2em;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .cli-output {
            color: #8892b0;
            line-height: 1.6;
            margin: 10px 0;
        }

        .cli-command {
            color: #00d4ff;
            font-weight: bold;
        }

        .transaction-pool {
            background: rgba(0, 212, 255, 0.1);
            border: 2px dashed #00d4ff;
            border-radius: 12px;
            padding: 20px;
            margin: 20px 0;
        }

        .transaction-pool h3 {
            color: #00d4ff;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .transaction {
            background: rgba(0, 0, 0, 0.3);
            padding: 10px;
            margin: 8px 0;
            border-radius: 8px;
            border-left: 3px solid #00d4ff;
            font-size: 0.9em;
            color: #8892b0;
        }

        .mining-status {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            border: 1px solid #00ff88;
            border-radius: 10px;
            padding: 15px;
            color: #00ff88;
            font-family: 'Courier New', monospace;
            z-index: 1000;
        }

        @media (max-width: 768px) {
            .limio-logo {
                font-size: 2em;
            }
            
            .blockchain-container {
                flex-direction: column;
                align-items: center;
            }
            
            .chain-link {
                width: 8px;
                height: 80px;
                transform-origin: top;
            }
            
            .chain-link.active {
                animation: limioLinkGrowVertical 1s ease-out forwards;
            }
            
            @keyframes limioLinkGrowVertical {
                0% { transform: scaleY(0); }
                100% { transform: scaleY(1); }
            }
            
            .chain-link::before,
            .chain-link::after {
                top: -8px;
                left: -4px;
            }
            
            .chain-link::after {
                top: auto;
                bottom: -8px;
            }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="limio-logo">⛓️ LIMIO SYSTEM</div>
            <p class="subtitle">Blockchain descentralizada de nova geração</p>
        </div>

        <div class="network-stats">
            <div class="stat-card">
                <div class="stat-value" id="activeNodes">37</div>
                <div class="stat-label">Nós Conectados</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="tpsAverage">142.3</div>
                <div class="stat-label">TPS Médio</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="activeMiners">1,205</div>
                <div class="stat-label">Mineradores Ativos</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="blockHeight">0</div>
                <div class="stat-label">Altura do Bloco</div>
            </div>
        </div>

        <div class="cli-panel">
            <div class="cli-header">
                💻 Limio CLI - Interface da Blockchain
            </div>
            <div class="cli-output">
                <div class="cli-command">$ limio start</div>
                <div id="cliStatus">⛓️ Inicializando blockchain...</div>
            </div>
        </div>

        <div class="transaction-pool">
            <h3>💰 Pool de Transações LIM</h3>
            <div id="transactionPool"></div>
        </div>

        <div class="controls">
            <button class="limio-btn" onclick="addLimioTransaction()">
                Nova Transação LIM
            </button>
            <button class="limio-btn" onclick="mineLimioBlock()" id="mineBtn">
                Minerar Bloco
            </button>
            <button class="limio-btn" onclick="resetLimioChain()">
                Reset Blockchain
            </button>
        </div>

        <div class="blockchain-container" id="blockchain">
        </div>

        <div class="mining-status" id="miningStatus" style="display: none;">
            <div>🔨 Minerando...</div>
            <div id="miningProgress">Calculando hash...</div>
        </div>
    </div>

    <script>
        class LimioBlockchain {
            constructor() {
                this.chain = [];
                this.pendingTransactions = [];
                this.miningInProgress = false;
                this.difficulty = 2; // Dificuldade para proof-of-work
                this.miningReward = 12.5; // Recompensa por bloco minerado
                this.networkStats = {
                    nodes: 37,
                    tps: 142.3,
                    miners: 1205
                };
            }

            createGenesisBlock() {
                const genesisBlock = {
                    index: 0,
                    timestamp: Date.now(),
                    data: {
                        type: "genesis",
                        message: "Bloco Gênesis Limio",
                        transactions: []
                    },
                    previousHash: "0x0000000000000000",
                    hash: "0x7a8b9c2d3e4f5678",
                    nonce: 0,
                    miner: "Limio System"
                };
                
                this.chain.push(genesisBlock);
                this.updateNetworkStats();
                this.renderBlockchain();
                this.updateCLI("✔️ Bloco Gênesis criado");
            }

            calculateHash(index, timestamp, data, previousHash, nonce = 0) {
                const input = index + timestamp + JSON.stringify(data) + previousHash + nonce;
                return "0x" + this.simpleHash(input);
            }

            simpleHash(str) {
                let hash = 0;
                for (let i = 0; i < str.length; i++) {
                    const char = str.charCodeAt(i);
                    hash = ((hash << 5) - hash) + char;
                    hash = hash & hash;
                }
                return Math.abs(hash).toString(16).padStart(12, '0');
            }

            getLatestBlock() {
                return this.chain[this.chain.length - 1];
            }

            async mineNewBlock() {
                if (this.miningInProgress || this.pendingTransactions.length === 0) return;
                
                this.miningInProgress = true;
                document.getElementById('mineBtn').disabled = true;
                document.getElementById('miningStatus').style.display = 'block';
                
                const newBlock = {
                    index: this.chain.length,
                    timestamp: Date.now(),
                    data: {
                        type: "transaction_block",
                        transactions: [...this.pendingTransactions],
                        reward: this.miningReward
                    },
                    previousHash: this.getLatestBlock().hash,
                    nonce: 0,
                    miner: "Minerador Limio #" + Math.floor(Math.random() * 1000)
                };

                this.updateCLI("🔗 Conectando a peers...");
                await this.sleep(1000);
                
                this.updateCLI("⚡ Minerando bloco #" + newBlock.index + "...");
                
                // Simular proof-of-work
                const startTime = Date.now();
                await this.simulateProofOfWork(newBlock);
                const miningTime = ((Date.now() - startTime) / 1000).toFixed(1);

                newBlock.hash = this.calculateHash(
                    newBlock.index,
                    newBlock.timestamp,
                    newBlock.data,
                    newBlock.previousHash,
                    newBlock.nonce
                );

                this.chain.push(newBlock);
                this.pendingTransactions = [];
                this.miningInProgress = false;
                
                document.getElementById('mineBtn').disabled = false;
                document.getElementById('miningStatus').style.display = 'none';
                
                this.updateCLI(`✔️ Bloco #${newBlock.index} minerado em ${miningTime}s`);
                this.updateCLI(`⚡ Hash: ${newBlock.hash}`);
                
                this.updateNetworkStats();
                this.renderBlockchain();
                this.updateTransactionPool();
            }

            async simulateProofOfWork(block) {
                return new Promise(resolve => {
                    let attempts = 0;
                    const maxAttempts = 30;
                    
                    const interval = setInterval(() => {
                        block.nonce = Math.floor(Math.random() * 1000000);
                        attempts++;
                        
                        document.getElementById('miningProgress').textContent = 
                            `Tentativa ${attempts}/${maxAttempts} - Nonce: ${block.nonce}`;
                        
                        if (attempts >= maxAttempts) {
                            clearInterval(interval);
                            resolve();
                        }
                    }, 100);
                });
            }

            addTransaction(from, to, amount) {
                const transaction = {
                    id: "tx_" + Date.now(),
                    from,
                    to,
                    amount: parseFloat(amount),
                    timestamp: new Date().toLocaleTimeString(),
                    fee: 0.01 // Taxa de transação
                };
                
                this.pendingTransactions.push(transaction);
                this.updateTransactionPool();
                this.updateCLI(`💰 Nova transação: ${amount} LIM (${from} → ${to})`);
            }

            updateTransactionPool() {
                const poolElement = document.getElementById('transactionPool');
                poolElement.innerHTML = '';
                
                if (this.pendingTransactions.length === 0) {
                    poolElement.innerHTML = '<div class="transaction">Nenhuma transação pendente</div>';
                } else {
                    this.pendingTransactions.forEach(tx => {
                        const txElement = document.createElement('div');
                        txElement.className = 'transaction';
                        txElement.innerHTML = `
                            <strong>${tx.from}</strong> → <strong>${tx.to}</strong>: 
                            <span class="limio-amount">${tx.amount} LIM</span> 
                            (Taxa: ${tx.fee} LIM) - ${tx.timestamp}
                        `;
                        poolElement.appendChild(txElement);
                    });
                }
            }

            updateNetworkStats() {
                // Simular variações nos stats da rede
                this.networkStats.nodes += Math.floor(Math.random() * 3) - 1;
                this.networkStats.tps += (Math.random() - 0.5) * 20;
                this.networkStats.miners += Math.floor(Math.random() * 10) - 5;
                
                document.getElementById('activeNodes').textContent = Math.max(1, this.networkStats.nodes);
                document.getElementById('tpsAverage').textContent = Math.max(0, this.networkStats.tps.toFixed(1));
                document.getElementById('activeMiners').textContent = Math.max(1, this.networkStats.miners);
                document.getElementById('blockHeight').textContent = this.chain.length;
            }

            updateCLI(message) {
                document.getElementById('cliStatus').textContent = message;
            }

            renderBlockchain() {
                const container = document.getElementById('blockchain');
                container.innerHTML = '';

                this.chain.forEa